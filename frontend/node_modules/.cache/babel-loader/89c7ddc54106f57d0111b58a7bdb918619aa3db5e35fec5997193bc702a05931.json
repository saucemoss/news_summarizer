{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nconst useInfiniteScroll = (callback, hasMore) => {\n  _s();\n  const observer = useRef();\n  const [isIntersecting, setIsIntersecting] = useState(false);\n  const triggerRef = useRef(null);\n  useEffect(() => {\n    const options = {\n      root: null,\n      rootMargin: '20px',\n      threshold: 0.1\n    };\n    observer.current = new IntersectionObserver(([entry]) => {\n      console.log('Intersection observed:', entry.isIntersecting);\n      console.log('Has more items:', hasMore);\n      setIsIntersecting(entry.isIntersecting);\n      if (entry.isIntersecting && hasMore) {\n        console.log('Triggering load more...');\n        callback();\n      }\n    }, options);\n    return () => {\n      if (observer.current) {\n        observer.current.disconnect();\n      }\n    };\n  }, [callback, hasMore]);\n\n  // Separate effect to handle observation\n  useEffect(() => {\n    if (observer.current && triggerRef.current) {\n      console.log('Starting to observe trigger element');\n      observer.current.observe(triggerRef.current);\n    } else {\n      console.log('Waiting for trigger element or observer to be ready');\n    }\n  }, [articles]); // Re-run when articles change\n\n  return [triggerRef, isIntersecting];\n};\n_s(useInfiniteScroll, \"7nma5w1u5wgiGzaEnM4/B2XP21Y=\");\nexport default useInfiniteScroll;","map":{"version":3,"names":["useEffect","useRef","useState","useInfiniteScroll","callback","hasMore","_s","observer","isIntersecting","setIsIntersecting","triggerRef","options","root","rootMargin","threshold","current","IntersectionObserver","entry","console","log","disconnect","observe","articles"],"sources":["C:/dev/news_summarizer_cr/frontend/src/hooks/useInfiniteScroll.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nconst useInfiniteScroll = (callback, hasMore) => {\n  const observer = useRef();\n  const [isIntersecting, setIsIntersecting] = useState(false);\n  const triggerRef = useRef(null);\n\n  useEffect(() => {\n    const options = {\n      root: null,\n      rootMargin: '20px',\n      threshold: 0.1\n    };\n\n    observer.current = new IntersectionObserver(([entry]) => {\n      console.log('Intersection observed:', entry.isIntersecting);\n      console.log('Has more items:', hasMore);\n      setIsIntersecting(entry.isIntersecting);\n      if (entry.isIntersecting && hasMore) {\n        console.log('Triggering load more...');\n        callback();\n      }\n    }, options);\n\n    return () => {\n      if (observer.current) {\n        observer.current.disconnect();\n      }\n    };\n  }, [callback, hasMore]);\n\n  // Separate effect to handle observation\n  useEffect(() => {\n    if (observer.current && triggerRef.current) {\n      console.log('Starting to observe trigger element');\n      observer.current.observe(triggerRef.current);\n    } else {\n      console.log('Waiting for trigger element or observer to be ready');\n    }\n  }, [articles]); // Re-run when articles change\n\n  return [triggerRef, isIntersecting];\n};\n\nexport default useInfiniteScroll; "],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,MAAMC,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,OAAO,KAAK;EAAAC,EAAA;EAC/C,MAAMC,QAAQ,GAAGN,MAAM,CAAC,CAAC;EACzB,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAMQ,UAAU,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACd,MAAMW,OAAO,GAAG;MACdC,IAAI,EAAE,IAAI;MACVC,UAAU,EAAE,MAAM;MAClBC,SAAS,EAAE;IACb,CAAC;IAEDP,QAAQ,CAACQ,OAAO,GAAG,IAAIC,oBAAoB,CAAC,CAAC,CAACC,KAAK,CAAC,KAAK;MACvDC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAACT,cAAc,CAAC;MAC3DU,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEd,OAAO,CAAC;MACvCI,iBAAiB,CAACQ,KAAK,CAACT,cAAc,CAAC;MACvC,IAAIS,KAAK,CAACT,cAAc,IAAIH,OAAO,EAAE;QACnCa,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACtCf,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC,EAAEO,OAAO,CAAC;IAEX,OAAO,MAAM;MACX,IAAIJ,QAAQ,CAACQ,OAAO,EAAE;QACpBR,QAAQ,CAACQ,OAAO,CAACK,UAAU,CAAC,CAAC;MAC/B;IACF,CAAC;EACH,CAAC,EAAE,CAAChB,QAAQ,EAAEC,OAAO,CAAC,CAAC;;EAEvB;EACAL,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,CAACQ,OAAO,IAAIL,UAAU,CAACK,OAAO,EAAE;MAC1CG,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClDZ,QAAQ,CAACQ,OAAO,CAACM,OAAO,CAACX,UAAU,CAACK,OAAO,CAAC;IAC9C,CAAC,MAAM;MACLG,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;IACpE;EACF,CAAC,EAAE,CAACG,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,OAAO,CAACZ,UAAU,EAAEF,cAAc,CAAC;AACrC,CAAC;AAACF,EAAA,CAxCIH,iBAAiB;AA0CvB,eAAeA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}